/*
 * JLunchExecuter.java
 *
 * Created on den 29 januari 2008, 10:56
 */

package com.jlunch.batch;

import com.jlunch.fwk.JLunchProperties;
import com.jlunch.fwk.util.ListUtil;
import java.util.List;
import javax.swing.ListModel;
import javax.swing.event.ListDataListener;
import javax.swing.event.TreeModelListener;
import javax.swing.tree.DefaultTreeModel;
import javax.swing.tree.MutableTreeNode;
import javax.swing.tree.TreeModel;
import javax.swing.tree.TreePath;

/**
 *
 * @author  griv
 */
public class JLunchExecuter extends javax.swing.JFrame {
    
    /** Creates new form JLunchExecuter */
    public JLunchExecuter() {
        initComponents();
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        jPasswordField1 = new javax.swing.JPasswordField();
        startButton = new javax.swing.JButton();
        titleLabel = new javax.swing.JLabel();
        exitButton = new javax.swing.JButton();
        statusScrollPane = new javax.swing.JScrollPane();
        statusArea = new javax.swing.JTextArea();
        statusLabel = new javax.swing.JLabel();
        messageLabel = new javax.swing.JLabel();
        message = new javax.swing.JTextField();
        recipentsScrollPane = new javax.swing.JScrollPane();
        recipientsTree = new javax.swing.JTree();
        recipientsLabel = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        fileMenu = new javax.swing.JMenu();
        exitMenu = new javax.swing.JMenuItem();
        helpMenu = new javax.swing.JMenu();
        aboutMenu = new javax.swing.JMenuItem();

        jPasswordField1.setText("jPasswordField1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("JLunch - by Ivar Grimstad");
        startButton.setText("Start");
        startButton.setToolTipText("Click here to generate JLunch mail to all recipients");
        startButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startButtonActionPerformed(evt);
            }
        });

        titleLabel.setFont(new java.awt.Font("Arial", 1, 18));
        titleLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        titleLabel.setText("JLunch");

        exitButton.setText("Exit");
        exitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitButtonActionPerformed(evt);
            }
        });

        statusArea.setColumns(20);
        statusArea.setEditable(false);
        statusArea.setRows(5);
        statusScrollPane.setViewportView(statusArea);

        statusLabel.setText("Status:");

        messageLabel.setText("Message:");

        message.setToolTipText("Write a personal message in the JLunch mail");

        recipientsTree.setToolTipText("JLunch mail is sent to all selected recipients");
        recipientsTree.setModel(        new TreeModel() {

            String root = "All";
            List children = JLunchProperties.getList( "recipients" );

            public void addTreeModelListener(TreeModelListener treeModelListener) {
            }
            public Object getChild(Object object, int i) {
                return children.get( i );
            }
            public int getChildCount(Object object) {
                return children.size();
            }
            public int getIndexOfChild(Object object, Object child) {
                return children.indexOf( child );
            }
            public Object getRoot() {
                return root;
            }
            public boolean isLeaf(Object object) {
                return children.contains( object );
            }
            public void removeTreeModelListener(TreeModelListener treeModelListener) {
            }
            public void valueForPathChanged(TreePath treePath, Object object) {
            }
        }
    );
    recipientsTree.setSelectionRow( 0 );
    recipientsTree.setSelectionModel(recipientsTree.getSelectionModel());
    recipentsScrollPane.setViewportView(recipientsTree);

    recipientsLabel.setText("Select mail recipients:");

    fileMenu.setText("File");
    exitMenu.setText("Exit");
    exitMenu.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            exitMenuActionPerformed(evt);
        }
    });

    fileMenu.add(exitMenu);

    jMenuBar1.add(fileMenu);

    helpMenu.setText("Help");
    aboutMenu.setText("About...");
    aboutMenu.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            aboutMenuActionPerformed(evt);
        }
    });

    helpMenu.add(aboutMenu);

    jMenuBar1.add(helpMenu);

    setJMenuBar(jMenuBar1);

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
    getContentPane().setLayout(layout);
    layout.setHorizontalGroup(
        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(layout.createSequentialGroup()
            .addContainerGap()
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(titleLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 346, Short.MAX_VALUE)
                            .addGap(40, 40, 40))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(statusLabel)
                                        .addComponent(messageLabel))
                                    .addGap(205, 205, 205)
                                    .addComponent(startButton)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(exitButton))
                                .addComponent(statusScrollPane, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 375, Short.MAX_VALUE)
                                .addComponent(message, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 375, Short.MAX_VALUE))
                            .addGap(11, 11, 11))
                        .addComponent(recipientsLabel))
                    .addContainerGap())
                .addComponent(recipentsScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE)))
    );
    layout.setVerticalGroup(
        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
            .addContainerGap()
            .addComponent(titleLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(recipientsLabel)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(recipentsScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(messageLabel)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(message, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(exitButton)
                .addComponent(startButton))
            .addGap(18, 18, 18)
            .addComponent(statusLabel)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(statusScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addContainerGap())
    );
    pack();
    }// </editor-fold>//GEN-END:initComponents

    private void exitMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitMenuActionPerformed
        System.exit( 0 );
    }//GEN-LAST:event_exitMenuActionPerformed

    private void aboutMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aboutMenuActionPerformed
// TODO add your handling code here:
    }//GEN-LAST:event_aboutMenuActionPerformed
        
    private void exitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitButtonActionPerformed
        System.exit( 0 );
    }//GEN-LAST:event_exitButtonActionPerformed
    
    private void startButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startButtonActionPerformed
        
        statusArea.setText( "" );

        final List<String> recipients = ListUtil.newArrayList();
        for( TreePath s : recipientsTree.getSelectionPaths() ) {
            
            if( s.getLastPathComponent().equals( "All" ) ) {
                for( int i = 0; i < recipientsTree.getModel().getChildCount( "All" ); i++ ) {
                    recipients.add( (String) recipientsTree.getModel().getChild( "All", i ) );
                }
            } else {
                recipients.add( (String) s.getLastPathComponent() );
            }
        }
        
        new JLunchMain( message.getText(), recipients ).importAndMailLunches();
        statusArea.append( "...DONE!" );
    }//GEN-LAST:event_startButtonActionPerformed
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new JLunchExecuter().setVisible(true);
            }
        });
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem aboutMenu;
    private javax.swing.JButton exitButton;
    private javax.swing.JMenuItem exitMenu;
    private javax.swing.JMenu fileMenu;
    private javax.swing.JMenu helpMenu;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPasswordField jPasswordField1;
    private javax.swing.JTextField message;
    private javax.swing.JLabel messageLabel;
    private javax.swing.JScrollPane recipentsScrollPane;
    private javax.swing.JLabel recipientsLabel;
    private javax.swing.JTree recipientsTree;
    private javax.swing.JButton startButton;
    private javax.swing.JTextArea statusArea;
    private javax.swing.JLabel statusLabel;
    private javax.swing.JScrollPane statusScrollPane;
    private javax.swing.JLabel titleLabel;
    // End of variables declaration//GEN-END:variables
    
}
